/*
 * RingCentral Connect Platform API
 *
 * RingCentral Connect Platform API
 *
 * The version of the OpenAPI document: 1.0.48
 * Contact: platform@ringcentral.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CallQueueUpdateDetails
    /// </summary>
    [DataContract]
    public partial class CallQueueUpdateDetails :  IEquatable<CallQueueUpdateDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CallQueueUpdateDetails" /> class.
        /// </summary>
        /// <param name="serviceLevelSettings">serviceLevelSettings.</param>
        /// <param name="editableMemberStatus">Allows members to change their queue status.</param>
        public CallQueueUpdateDetails(CallQueueServiceLevelSettings serviceLevelSettings = default(CallQueueServiceLevelSettings), bool editableMemberStatus = default(bool))
        {
            this.ServiceLevelSettings = serviceLevelSettings;
            this.EditableMemberStatus = editableMemberStatus;
        }

        /// <summary>
        /// Gets or Sets ServiceLevelSettings
        /// </summary>
        [DataMember(Name="serviceLevelSettings", EmitDefaultValue=false)]
        public CallQueueServiceLevelSettings ServiceLevelSettings { get; set; }

        /// <summary>
        /// Allows members to change their queue status
        /// </summary>
        /// <value>Allows members to change their queue status</value>
        [DataMember(Name="editableMemberStatus", EmitDefaultValue=false)]
        public bool EditableMemberStatus { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CallQueueUpdateDetails {\n");
            sb.Append("  ServiceLevelSettings: ").Append(ServiceLevelSettings).Append("\n");
            sb.Append("  EditableMemberStatus: ").Append(EditableMemberStatus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CallQueueUpdateDetails);
        }

        /// <summary>
        /// Returns true if CallQueueUpdateDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of CallQueueUpdateDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CallQueueUpdateDetails input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ServiceLevelSettings == input.ServiceLevelSettings ||
                    (this.ServiceLevelSettings != null &&
                    this.ServiceLevelSettings.Equals(input.ServiceLevelSettings))
                ) && 
                (
                    this.EditableMemberStatus == input.EditableMemberStatus ||
                    (this.EditableMemberStatus != null &&
                    this.EditableMemberStatus.Equals(input.EditableMemberStatus))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ServiceLevelSettings != null)
                    hashCode = hashCode * 59 + this.ServiceLevelSettings.GetHashCode();
                if (this.EditableMemberStatus != null)
                    hashCode = hashCode * 59 + this.EditableMemberStatus.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
