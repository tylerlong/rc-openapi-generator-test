/*
 * RingCentral Connect Platform API
 *
 * RingCentral Connect Platform API
 *
 * The version of the OpenAPI document: 1.0.48
 * Contact: platform@ringcentral.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// AnalyticsLegacyCallSegmentFilter
    /// </summary>
    [DataContract]
    public partial class AnalyticsLegacyCallSegmentFilter :  IEquatable<AnalyticsLegacyCallSegmentFilter>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets CallSegment
        /// </summary>
        [DataMember(Name="callSegment", EmitDefaultValue=true)]
        public AnalyticsLegacyCallSegment CallSegment { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AnalyticsLegacyCallSegmentFilter" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AnalyticsLegacyCallSegmentFilter() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AnalyticsLegacyCallSegmentFilter" /> class.
        /// </summary>
        /// <param name="callSegment">callSegment (required).</param>
        /// <param name="callSegmentLength">callSegmentLength.</param>
        public AnalyticsLegacyCallSegmentFilter(AnalyticsLegacyCallSegment callSegment = default(AnalyticsLegacyCallSegment), AnalyticsLegacyPerformanceCallsCallSegmentLengthFilter callSegmentLength = default(AnalyticsLegacyPerformanceCallsCallSegmentLengthFilter))
        {
            // to ensure "callSegment" is required (not null)
            if (callSegment == null)
            {
                throw new InvalidDataException("callSegment is a required property for AnalyticsLegacyCallSegmentFilter and cannot be null");
            }
            else
            {
                this.CallSegment = callSegment;
            }

            this.CallSegmentLength = callSegmentLength;
        }


        /// <summary>
        /// Gets or Sets CallSegmentLength
        /// </summary>
        [DataMember(Name="callSegmentLength", EmitDefaultValue=false)]
        public AnalyticsLegacyPerformanceCallsCallSegmentLengthFilter CallSegmentLength { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AnalyticsLegacyCallSegmentFilter {\n");
            sb.Append("  CallSegment: ").Append(CallSegment).Append("\n");
            sb.Append("  CallSegmentLength: ").Append(CallSegmentLength).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AnalyticsLegacyCallSegmentFilter);
        }

        /// <summary>
        /// Returns true if AnalyticsLegacyCallSegmentFilter instances are equal
        /// </summary>
        /// <param name="input">Instance of AnalyticsLegacyCallSegmentFilter to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AnalyticsLegacyCallSegmentFilter input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CallSegment == input.CallSegment ||
                    (this.CallSegment != null &&
                    this.CallSegment.Equals(input.CallSegment))
                ) && 
                (
                    this.CallSegmentLength == input.CallSegmentLength ||
                    (this.CallSegmentLength != null &&
                    this.CallSegmentLength.Equals(input.CallSegmentLength))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CallSegment != null)
                    hashCode = hashCode * 59 + this.CallSegment.GetHashCode();
                if (this.CallSegmentLength != null)
                    hashCode = hashCode * 59 + this.CallSegmentLength.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
