/*
 * RingCentral Connect Platform API
 *
 * RingCentral Connect Platform API
 *
 * The version of the OpenAPI document: 1.0.48
 * Contact: platform@ringcentral.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CallRecordingSettingsResource
    /// </summary>
    [DataContract]
    public partial class CallRecordingSettingsResource :  IEquatable<CallRecordingSettingsResource>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CallRecordingSettingsResource" /> class.
        /// </summary>
        /// <param name="onDemand">onDemand.</param>
        /// <param name="automatic">automatic.</param>
        /// <param name="greetings">Collection of Greeting Info.</param>
        public CallRecordingSettingsResource(OnDemandResource onDemand = default(OnDemandResource), AutomaticRecordingResource automatic = default(AutomaticRecordingResource), List<GreetingResource> greetings = default(List<GreetingResource>))
        {
            this.OnDemand = onDemand;
            this.Automatic = automatic;
            this.Greetings = greetings;
        }

        /// <summary>
        /// Gets or Sets OnDemand
        /// </summary>
        [DataMember(Name="onDemand", EmitDefaultValue=false)]
        public OnDemandResource OnDemand { get; set; }

        /// <summary>
        /// Gets or Sets Automatic
        /// </summary>
        [DataMember(Name="automatic", EmitDefaultValue=false)]
        public AutomaticRecordingResource Automatic { get; set; }

        /// <summary>
        /// Collection of Greeting Info
        /// </summary>
        /// <value>Collection of Greeting Info</value>
        [DataMember(Name="greetings", EmitDefaultValue=false)]
        public List<GreetingResource> Greetings { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CallRecordingSettingsResource {\n");
            sb.Append("  OnDemand: ").Append(OnDemand).Append("\n");
            sb.Append("  Automatic: ").Append(Automatic).Append("\n");
            sb.Append("  Greetings: ").Append(Greetings).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CallRecordingSettingsResource);
        }

        /// <summary>
        /// Returns true if CallRecordingSettingsResource instances are equal
        /// </summary>
        /// <param name="input">Instance of CallRecordingSettingsResource to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CallRecordingSettingsResource input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.OnDemand == input.OnDemand ||
                    (this.OnDemand != null &&
                    this.OnDemand.Equals(input.OnDemand))
                ) && 
                (
                    this.Automatic == input.Automatic ||
                    (this.Automatic != null &&
                    this.Automatic.Equals(input.Automatic))
                ) && 
                (
                    this.Greetings == input.Greetings ||
                    this.Greetings != null &&
                    input.Greetings != null &&
                    this.Greetings.SequenceEqual(input.Greetings)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OnDemand != null)
                    hashCode = hashCode * 59 + this.OnDemand.GetHashCode();
                if (this.Automatic != null)
                    hashCode = hashCode * 59 + this.Automatic.GetHashCode();
                if (this.Greetings != null)
                    hashCode = hashCode * 59 + this.Greetings.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
