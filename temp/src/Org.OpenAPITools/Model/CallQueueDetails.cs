/*
 * RingCentral Connect Platform API
 *
 * RingCentral Connect Platform API
 *
 * The version of the OpenAPI document: 1.0.48
 * Contact: platform@ringcentral.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CallQueueDetails
    /// </summary>
    [DataContract]
    public partial class CallQueueDetails :  IEquatable<CallQueueDetails>, IValidatableObject
    {
        /// <summary>
        /// Call queue status
        /// </summary>
        /// <value>Call queue status</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StatusEnum
        {
            /// <summary>
            /// Enum Enabled for value: Enabled
            /// </summary>
            [EnumMember(Value = "Enabled")]
            Enabled = 1,

            /// <summary>
            /// Enum Disabled for value: Disabled
            /// </summary>
            [EnumMember(Value = "Disabled")]
            Disabled = 2,

            /// <summary>
            /// Enum NotActivated for value: NotActivated
            /// </summary>
            [EnumMember(Value = "NotActivated")]
            NotActivated = 3

        }

        /// <summary>
        /// Call queue status
        /// </summary>
        /// <value>Call queue status</value>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public StatusEnum? Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CallQueueDetails" /> class.
        /// </summary>
        /// <param name="id">Internal identifier of a call queue.</param>
        /// <param name="name">Call queue name.</param>
        /// <param name="extensionNumber">Call queue extension number.</param>
        /// <param name="status">Call queue status.</param>
        /// <param name="serviceLevelSettings">serviceLevelSettings.</param>
        /// <param name="editableMemberStatus">Allows members to change their queue status.</param>
        public CallQueueDetails(string id = default(string), string name = default(string), string extensionNumber = default(string), StatusEnum? status = default(StatusEnum?), CallQueueServiceLevelSettings serviceLevelSettings = default(CallQueueServiceLevelSettings), bool editableMemberStatus = default(bool))
        {
            this.Id = id;
            this.Name = name;
            this.ExtensionNumber = extensionNumber;
            this.Status = status;
            this.ServiceLevelSettings = serviceLevelSettings;
            this.EditableMemberStatus = editableMemberStatus;
        }

        /// <summary>
        /// Internal identifier of a call queue
        /// </summary>
        /// <value>Internal identifier of a call queue</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Call queue name
        /// </summary>
        /// <value>Call queue name</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Call queue extension number
        /// </summary>
        /// <value>Call queue extension number</value>
        [DataMember(Name="extensionNumber", EmitDefaultValue=false)]
        public string ExtensionNumber { get; set; }


        /// <summary>
        /// Gets or Sets ServiceLevelSettings
        /// </summary>
        [DataMember(Name="serviceLevelSettings", EmitDefaultValue=false)]
        public CallQueueServiceLevelSettings ServiceLevelSettings { get; set; }

        /// <summary>
        /// Allows members to change their queue status
        /// </summary>
        /// <value>Allows members to change their queue status</value>
        [DataMember(Name="editableMemberStatus", EmitDefaultValue=false)]
        public bool EditableMemberStatus { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CallQueueDetails {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ExtensionNumber: ").Append(ExtensionNumber).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  ServiceLevelSettings: ").Append(ServiceLevelSettings).Append("\n");
            sb.Append("  EditableMemberStatus: ").Append(EditableMemberStatus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CallQueueDetails);
        }

        /// <summary>
        /// Returns true if CallQueueDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of CallQueueDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CallQueueDetails input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.ExtensionNumber == input.ExtensionNumber ||
                    (this.ExtensionNumber != null &&
                    this.ExtensionNumber.Equals(input.ExtensionNumber))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.ServiceLevelSettings == input.ServiceLevelSettings ||
                    (this.ServiceLevelSettings != null &&
                    this.ServiceLevelSettings.Equals(input.ServiceLevelSettings))
                ) && 
                (
                    this.EditableMemberStatus == input.EditableMemberStatus ||
                    (this.EditableMemberStatus != null &&
                    this.EditableMemberStatus.Equals(input.EditableMemberStatus))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.ExtensionNumber != null)
                    hashCode = hashCode * 59 + this.ExtensionNumber.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.ServiceLevelSettings != null)
                    hashCode = hashCode * 59 + this.ServiceLevelSettings.GetHashCode();
                if (this.EditableMemberStatus != null)
                    hashCode = hashCode * 59 + this.EditableMemberStatus.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
