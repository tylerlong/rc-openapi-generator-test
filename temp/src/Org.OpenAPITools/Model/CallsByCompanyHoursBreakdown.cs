/*
 * RingCentral Connect Platform API
 *
 * RingCentral Connect Platform API
 *
 * The version of the OpenAPI document: 1.0.48
 * Contact: platform@ringcentral.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Result breakdown by company hours
    /// </summary>
    [DataContract]
    public partial class CallsByCompanyHoursBreakdown :  IEquatable<CallsByCompanyHoursBreakdown>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CallsByCompanyHoursBreakdown" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CallsByCompanyHoursBreakdown() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CallsByCompanyHoursBreakdown" /> class.
        /// </summary>
        /// <param name="businessHours">Value for BusinessHours company hours (required).</param>
        /// <param name="afterHours">Value for AfterHours company hours (required).</param>
        public CallsByCompanyHoursBreakdown(double businessHours = default(double), double afterHours = default(double))
        {
            // to ensure "businessHours" is required (not null)
            if (businessHours == null)
            {
                throw new InvalidDataException("businessHours is a required property for CallsByCompanyHoursBreakdown and cannot be null");
            }
            else
            {
                this.BusinessHours = businessHours;
            }

            // to ensure "afterHours" is required (not null)
            if (afterHours == null)
            {
                throw new InvalidDataException("afterHours is a required property for CallsByCompanyHoursBreakdown and cannot be null");
            }
            else
            {
                this.AfterHours = afterHours;
            }

        }

        /// <summary>
        /// Value for BusinessHours company hours
        /// </summary>
        /// <value>Value for BusinessHours company hours</value>
        [DataMember(Name="businessHours", EmitDefaultValue=true)]
        public double BusinessHours { get; set; }

        /// <summary>
        /// Value for AfterHours company hours
        /// </summary>
        /// <value>Value for AfterHours company hours</value>
        [DataMember(Name="afterHours", EmitDefaultValue=true)]
        public double AfterHours { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CallsByCompanyHoursBreakdown {\n");
            sb.Append("  BusinessHours: ").Append(BusinessHours).Append("\n");
            sb.Append("  AfterHours: ").Append(AfterHours).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CallsByCompanyHoursBreakdown);
        }

        /// <summary>
        /// Returns true if CallsByCompanyHoursBreakdown instances are equal
        /// </summary>
        /// <param name="input">Instance of CallsByCompanyHoursBreakdown to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CallsByCompanyHoursBreakdown input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.BusinessHours == input.BusinessHours ||
                    (this.BusinessHours != null &&
                    this.BusinessHours.Equals(input.BusinessHours))
                ) && 
                (
                    this.AfterHours == input.AfterHours ||
                    (this.AfterHours != null &&
                    this.AfterHours.Equals(input.AfterHours))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BusinessHours != null)
                    hashCode = hashCode * 59 + this.BusinessHours.GetHashCode();
                if (this.AfterHours != null)
                    hashCode = hashCode * 59 + this.AfterHours.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
