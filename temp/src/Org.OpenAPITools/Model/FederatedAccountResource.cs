/*
 * RingCentral Connect Platform API
 *
 * RingCentral Connect Platform API
 *
 * The version of the OpenAPI document: 1.0.48
 * Contact: platform@ringcentral.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// FederatedAccountResource
    /// </summary>
    [DataContract]
    public partial class FederatedAccountResource :  IEquatable<FederatedAccountResource>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FederatedAccountResource" /> class.
        /// </summary>
        /// <param name="companyName">companyName.</param>
        /// <param name="conflictCount">conflictCount.</param>
        /// <param name="federatedName">federatedName.</param>
        /// <param name="id">id.</param>
        /// <param name="linkCreationTime">linkCreationTime.</param>
        /// <param name="mainNumber">mainNumber.</param>
        public FederatedAccountResource(string companyName = default(string), int conflictCount = default(int), string federatedName = default(string), string id = default(string), string linkCreationTime = default(string), PhoneNumberResource mainNumber = default(PhoneNumberResource))
        {
            this.CompanyName = companyName;
            this.ConflictCount = conflictCount;
            this.FederatedName = federatedName;
            this.Id = id;
            this.LinkCreationTime = linkCreationTime;
            this.MainNumber = mainNumber;
        }

        /// <summary>
        /// Gets or Sets CompanyName
        /// </summary>
        [DataMember(Name="companyName", EmitDefaultValue=false)]
        public string CompanyName { get; set; }

        /// <summary>
        /// Gets or Sets ConflictCount
        /// </summary>
        [DataMember(Name="conflictCount", EmitDefaultValue=false)]
        public int ConflictCount { get; set; }

        /// <summary>
        /// Gets or Sets FederatedName
        /// </summary>
        [DataMember(Name="federatedName", EmitDefaultValue=false)]
        public string FederatedName { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets LinkCreationTime
        /// </summary>
        [DataMember(Name="linkCreationTime", EmitDefaultValue=false)]
        public string LinkCreationTime { get; set; }

        /// <summary>
        /// Gets or Sets MainNumber
        /// </summary>
        [DataMember(Name="mainNumber", EmitDefaultValue=false)]
        public PhoneNumberResource MainNumber { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class FederatedAccountResource {\n");
            sb.Append("  CompanyName: ").Append(CompanyName).Append("\n");
            sb.Append("  ConflictCount: ").Append(ConflictCount).Append("\n");
            sb.Append("  FederatedName: ").Append(FederatedName).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  LinkCreationTime: ").Append(LinkCreationTime).Append("\n");
            sb.Append("  MainNumber: ").Append(MainNumber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as FederatedAccountResource);
        }

        /// <summary>
        /// Returns true if FederatedAccountResource instances are equal
        /// </summary>
        /// <param name="input">Instance of FederatedAccountResource to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FederatedAccountResource input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CompanyName == input.CompanyName ||
                    (this.CompanyName != null &&
                    this.CompanyName.Equals(input.CompanyName))
                ) && 
                (
                    this.ConflictCount == input.ConflictCount ||
                    (this.ConflictCount != null &&
                    this.ConflictCount.Equals(input.ConflictCount))
                ) && 
                (
                    this.FederatedName == input.FederatedName ||
                    (this.FederatedName != null &&
                    this.FederatedName.Equals(input.FederatedName))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.LinkCreationTime == input.LinkCreationTime ||
                    (this.LinkCreationTime != null &&
                    this.LinkCreationTime.Equals(input.LinkCreationTime))
                ) && 
                (
                    this.MainNumber == input.MainNumber ||
                    (this.MainNumber != null &&
                    this.MainNumber.Equals(input.MainNumber))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CompanyName != null)
                    hashCode = hashCode * 59 + this.CompanyName.GetHashCode();
                if (this.ConflictCount != null)
                    hashCode = hashCode * 59 + this.ConflictCount.GetHashCode();
                if (this.FederatedName != null)
                    hashCode = hashCode * 59 + this.FederatedName.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.LinkCreationTime != null)
                    hashCode = hashCode * 59 + this.LinkCreationTime.GetHashCode();
                if (this.MainNumber != null)
                    hashCode = hashCode * 59 + this.MainNumber.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
