/*
 * RingCentral Connect Platform API
 *
 * RingCentral Connect Platform API
 *
 * The version of the OpenAPI document: 1.0.48
 * Contact: platform@ringcentral.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// UserSearchResponse
    /// </summary>
    [DataContract]
    public partial class UserSearchResponse :  IEquatable<UserSearchResponse>, IValidatableObject
    {
        /// <summary>
        /// Defines Schemas
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum SchemasEnum
        {
            /// <summary>
            /// Enum Urnietfparamsscimapimessages20ListResponse for value: urn:ietf:params:scim:api:messages:2.0:ListResponse
            /// </summary>
            [EnumMember(Value = "urn:ietf:params:scim:api:messages:2.0:ListResponse")]
            Urnietfparamsscimapimessages20ListResponse = 1

        }


        /// <summary>
        /// Gets or Sets Schemas
        /// </summary>
        [DataMember(Name="schemas", EmitDefaultValue=false)]
        public List<SchemasEnum> Schemas { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="UserSearchResponse" /> class.
        /// </summary>
        /// <param name="resources">user list.</param>
        /// <param name="itemsPerPage">itemsPerPage.</param>
        /// <param name="schemas">schemas.</param>
        /// <param name="startIndex">startIndex.</param>
        /// <param name="totalResults">totalResults.</param>
        public UserSearchResponse(List<UserResponse> resources = default(List<UserResponse>), long itemsPerPage = default(long), List<SchemasEnum> schemas = default(List<SchemasEnum>), long startIndex = default(long), long totalResults = default(long))
        {
            this.Resources = resources;
            this.ItemsPerPage = itemsPerPage;
            this.Schemas = schemas;
            this.StartIndex = startIndex;
            this.TotalResults = totalResults;
        }

        /// <summary>
        /// user list
        /// </summary>
        /// <value>user list</value>
        [DataMember(Name="Resources", EmitDefaultValue=false)]
        public List<UserResponse> Resources { get; set; }

        /// <summary>
        /// Gets or Sets ItemsPerPage
        /// </summary>
        [DataMember(Name="itemsPerPage", EmitDefaultValue=false)]
        public long ItemsPerPage { get; set; }


        /// <summary>
        /// Gets or Sets StartIndex
        /// </summary>
        [DataMember(Name="startIndex", EmitDefaultValue=false)]
        public long StartIndex { get; set; }

        /// <summary>
        /// Gets or Sets TotalResults
        /// </summary>
        [DataMember(Name="totalResults", EmitDefaultValue=false)]
        public long TotalResults { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UserSearchResponse {\n");
            sb.Append("  Resources: ").Append(Resources).Append("\n");
            sb.Append("  ItemsPerPage: ").Append(ItemsPerPage).Append("\n");
            sb.Append("  Schemas: ").Append(Schemas).Append("\n");
            sb.Append("  StartIndex: ").Append(StartIndex).Append("\n");
            sb.Append("  TotalResults: ").Append(TotalResults).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UserSearchResponse);
        }

        /// <summary>
        /// Returns true if UserSearchResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of UserSearchResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UserSearchResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Resources == input.Resources ||
                    this.Resources != null &&
                    input.Resources != null &&
                    this.Resources.SequenceEqual(input.Resources)
                ) && 
                (
                    this.ItemsPerPage == input.ItemsPerPage ||
                    (this.ItemsPerPage != null &&
                    this.ItemsPerPage.Equals(input.ItemsPerPage))
                ) && 
                (
                    this.Schemas == input.Schemas ||
                    this.Schemas != null &&
                    input.Schemas != null &&
                    this.Schemas.SequenceEqual(input.Schemas)
                ) && 
                (
                    this.StartIndex == input.StartIndex ||
                    (this.StartIndex != null &&
                    this.StartIndex.Equals(input.StartIndex))
                ) && 
                (
                    this.TotalResults == input.TotalResults ||
                    (this.TotalResults != null &&
                    this.TotalResults.Equals(input.TotalResults))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Resources != null)
                    hashCode = hashCode * 59 + this.Resources.GetHashCode();
                if (this.ItemsPerPage != null)
                    hashCode = hashCode * 59 + this.ItemsPerPage.GetHashCode();
                if (this.Schemas != null)
                    hashCode = hashCode * 59 + this.Schemas.GetHashCode();
                if (this.StartIndex != null)
                    hashCode = hashCode * 59 + this.StartIndex.GetHashCode();
                if (this.TotalResults != null)
                    hashCode = hashCode * 59 + this.TotalResults.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
