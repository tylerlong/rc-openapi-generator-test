/*
 * RingCentral Connect Platform API
 *
 * RingCentral Connect Platform API
 *
 * The version of the OpenAPI document: 1.0.48
 * Contact: platform@ringcentral.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// MeetingServiceInfoResource
    /// </summary>
    [DataContract]
    public partial class MeetingServiceInfoResource :  IEquatable<MeetingServiceInfoResource>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MeetingServiceInfoResource" /> class.
        /// </summary>
        /// <param name="uri">uri.</param>
        /// <param name="supportUri">supportUri.</param>
        /// <param name="intlDialInNumbersUri">intlDialInNumbersUri.</param>
        /// <param name="externalUserInfo">externalUserInfo.</param>
        /// <param name="dialInNumbers">dialInNumbers.</param>
        public MeetingServiceInfoResource(string uri = default(string), string supportUri = default(string), string intlDialInNumbersUri = default(string), MeetingExternalUserInfoResource externalUserInfo = default(MeetingExternalUserInfoResource), List<DialInNumberResource> dialInNumbers = default(List<DialInNumberResource>))
        {
            this.Uri = uri;
            this.SupportUri = supportUri;
            this.IntlDialInNumbersUri = intlDialInNumbersUri;
            this.ExternalUserInfo = externalUserInfo;
            this.DialInNumbers = dialInNumbers;
        }

        /// <summary>
        /// Gets or Sets Uri
        /// </summary>
        [DataMember(Name="uri", EmitDefaultValue=false)]
        public string Uri { get; set; }

        /// <summary>
        /// Gets or Sets SupportUri
        /// </summary>
        [DataMember(Name="supportUri", EmitDefaultValue=false)]
        public string SupportUri { get; set; }

        /// <summary>
        /// Gets or Sets IntlDialInNumbersUri
        /// </summary>
        [DataMember(Name="intlDialInNumbersUri", EmitDefaultValue=false)]
        public string IntlDialInNumbersUri { get; set; }

        /// <summary>
        /// Gets or Sets ExternalUserInfo
        /// </summary>
        [DataMember(Name="externalUserInfo", EmitDefaultValue=false)]
        public MeetingExternalUserInfoResource ExternalUserInfo { get; set; }

        /// <summary>
        /// Gets or Sets DialInNumbers
        /// </summary>
        [DataMember(Name="dialInNumbers", EmitDefaultValue=false)]
        public List<DialInNumberResource> DialInNumbers { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MeetingServiceInfoResource {\n");
            sb.Append("  Uri: ").Append(Uri).Append("\n");
            sb.Append("  SupportUri: ").Append(SupportUri).Append("\n");
            sb.Append("  IntlDialInNumbersUri: ").Append(IntlDialInNumbersUri).Append("\n");
            sb.Append("  ExternalUserInfo: ").Append(ExternalUserInfo).Append("\n");
            sb.Append("  DialInNumbers: ").Append(DialInNumbers).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MeetingServiceInfoResource);
        }

        /// <summary>
        /// Returns true if MeetingServiceInfoResource instances are equal
        /// </summary>
        /// <param name="input">Instance of MeetingServiceInfoResource to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MeetingServiceInfoResource input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Uri == input.Uri ||
                    (this.Uri != null &&
                    this.Uri.Equals(input.Uri))
                ) && 
                (
                    this.SupportUri == input.SupportUri ||
                    (this.SupportUri != null &&
                    this.SupportUri.Equals(input.SupportUri))
                ) && 
                (
                    this.IntlDialInNumbersUri == input.IntlDialInNumbersUri ||
                    (this.IntlDialInNumbersUri != null &&
                    this.IntlDialInNumbersUri.Equals(input.IntlDialInNumbersUri))
                ) && 
                (
                    this.ExternalUserInfo == input.ExternalUserInfo ||
                    (this.ExternalUserInfo != null &&
                    this.ExternalUserInfo.Equals(input.ExternalUserInfo))
                ) && 
                (
                    this.DialInNumbers == input.DialInNumbers ||
                    this.DialInNumbers != null &&
                    input.DialInNumbers != null &&
                    this.DialInNumbers.SequenceEqual(input.DialInNumbers)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Uri != null)
                    hashCode = hashCode * 59 + this.Uri.GetHashCode();
                if (this.SupportUri != null)
                    hashCode = hashCode * 59 + this.SupportUri.GetHashCode();
                if (this.IntlDialInNumbersUri != null)
                    hashCode = hashCode * 59 + this.IntlDialInNumbersUri.GetHashCode();
                if (this.ExternalUserInfo != null)
                    hashCode = hashCode * 59 + this.ExternalUserInfo.GetHashCode();
                if (this.DialInNumbers != null)
                    hashCode = hashCode * 59 + this.DialInNumbers.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
