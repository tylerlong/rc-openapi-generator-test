/*
 * RingCentral Connect Platform API
 *
 * RingCentral Connect Platform API
 *
 * The version of the OpenAPI document: 1.0.48
 * Contact: platform@ringcentral.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing IncomingWebhooksApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class IncomingWebhooksApiTests
    {
        private IncomingWebhooksApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new IncomingWebhooksApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of IncomingWebhooksApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' IncomingWebhooksApi
            //Assert.IsInstanceOf(typeof(IncomingWebhooksApi), instance);
        }

        
        /// <summary>
        /// Test ActivateGlipWebhook
        /// </summary>
        [Test]
        public void ActivateGlipWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string webhookId = null;
            //instance.ActivateGlipWebhook(webhookId);
            
        }
        
        /// <summary>
        /// Test CreateGlipGroupWebhook
        /// </summary>
        [Test]
        public void CreateGlipGroupWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string groupId = null;
            //var response = instance.CreateGlipGroupWebhook(groupId);
            //Assert.IsInstanceOf(typeof(GlipWebhookInfo), response, "response is GlipWebhookInfo");
        }
        
        /// <summary>
        /// Test DeleteGlipWebhook
        /// </summary>
        [Test]
        public void DeleteGlipWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string webhookId = null;
            //instance.DeleteGlipWebhook(webhookId);
            
        }
        
        /// <summary>
        /// Test ListGlipGroupWebhooks
        /// </summary>
        [Test]
        public void ListGlipGroupWebhooksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string groupId = null;
            //var response = instance.ListGlipGroupWebhooks(groupId);
            //Assert.IsInstanceOf(typeof(GlipWebhookList), response, "response is GlipWebhookList");
        }
        
        /// <summary>
        /// Test ListGlipWebhooks
        /// </summary>
        [Test]
        public void ListGlipWebhooksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListGlipWebhooks();
            //Assert.IsInstanceOf(typeof(GlipWebhookList), response, "response is GlipWebhookList");
        }
        
        /// <summary>
        /// Test ReadGlipWebhook
        /// </summary>
        [Test]
        public void ReadGlipWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> webhookId = null;
            //var response = instance.ReadGlipWebhook(webhookId);
            //Assert.IsInstanceOf(typeof(GlipWebhookList), response, "response is GlipWebhookList");
        }
        
        /// <summary>
        /// Test SuspendGlipWebhook
        /// </summary>
        [Test]
        public void SuspendGlipWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string webhookId = null;
            //instance.SuspendGlipWebhook(webhookId);
            
        }
        
    }

}
