/*
 * RingCentral Connect Platform API
 *
 * RingCentral Connect Platform API
 *
 * The version of the OpenAPI document: 1.0.48
 * Contact: platform@ringcentral.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing TeamsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TeamsApiTests
    {
        private TeamsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TeamsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TeamsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' TeamsApi
            //Assert.IsInstanceOf(typeof(TeamsApi), instance);
        }

        
        /// <summary>
        /// Test AddGlipTeamMembers
        /// </summary>
        [Test]
        public void AddGlipTeamMembersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string chatId = null;
            //GlipPostMembersListBody glipPostMembersListBody = null;
            //instance.AddGlipTeamMembers(chatId, glipPostMembersListBody);
            
        }
        
        /// <summary>
        /// Test ArchiveGlipTeam
        /// </summary>
        [Test]
        public void ArchiveGlipTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string chatId = null;
            //instance.ArchiveGlipTeam(chatId);
            
        }
        
        /// <summary>
        /// Test CreateGlipTeam
        /// </summary>
        [Test]
        public void CreateGlipTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GlipPostTeamBody glipPostTeamBody = null;
            //var response = instance.CreateGlipTeam(glipPostTeamBody);
            //Assert.IsInstanceOf(typeof(GlipTeamInfo), response, "response is GlipTeamInfo");
        }
        
        /// <summary>
        /// Test DeleteGlipTeam
        /// </summary>
        [Test]
        public void DeleteGlipTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string chatId = null;
            //instance.DeleteGlipTeam(chatId);
            
        }
        
        /// <summary>
        /// Test JoinGlipTeam
        /// </summary>
        [Test]
        public void JoinGlipTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string chatId = null;
            //instance.JoinGlipTeam(chatId);
            
        }
        
        /// <summary>
        /// Test LeaveGlipTeam
        /// </summary>
        [Test]
        public void LeaveGlipTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string chatId = null;
            //instance.LeaveGlipTeam(chatId);
            
        }
        
        /// <summary>
        /// Test ListGlipTeams
        /// </summary>
        [Test]
        public void ListGlipTeamsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? recordCount = null;
            //string pageToken = null;
            //var response = instance.ListGlipTeams(recordCount, pageToken);
            //Assert.IsInstanceOf(typeof(GlipTeamsList), response, "response is GlipTeamsList");
        }
        
        /// <summary>
        /// Test PatchGlipEveryone
        /// </summary>
        [Test]
        public void PatchGlipEveryoneTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateGlipEveryoneRequest updateGlipEveryoneRequest = null;
            //var response = instance.PatchGlipEveryone(updateGlipEveryoneRequest);
            //Assert.IsInstanceOf(typeof(GlipEveryoneInfo), response, "response is GlipEveryoneInfo");
        }
        
        /// <summary>
        /// Test PatchGlipTeam
        /// </summary>
        [Test]
        public void PatchGlipTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string chatId = null;
            //GlipPatchTeamBody glipPatchTeamBody = null;
            //var response = instance.PatchGlipTeam(chatId, glipPatchTeamBody);
            //Assert.IsInstanceOf(typeof(GlipTeamInfo), response, "response is GlipTeamInfo");
        }
        
        /// <summary>
        /// Test ReadGlipEveryone
        /// </summary>
        [Test]
        public void ReadGlipEveryoneTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ReadGlipEveryone();
            //Assert.IsInstanceOf(typeof(GlipEveryoneInfo), response, "response is GlipEveryoneInfo");
        }
        
        /// <summary>
        /// Test ReadGlipTeam
        /// </summary>
        [Test]
        public void ReadGlipTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string chatId = null;
            //var response = instance.ReadGlipTeam(chatId);
            //Assert.IsInstanceOf(typeof(GlipTeamInfo), response, "response is GlipTeamInfo");
        }
        
        /// <summary>
        /// Test RemoveGlipTeamMembers
        /// </summary>
        [Test]
        public void RemoveGlipTeamMembersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string chatId = null;
            //GlipPostMembersIdsListBody glipPostMembersIdsListBody = null;
            //instance.RemoveGlipTeamMembers(chatId, glipPostMembersIdsListBody);
            
        }
        
        /// <summary>
        /// Test UnarchiveGlipTeam
        /// </summary>
        [Test]
        public void UnarchiveGlipTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string chatId = null;
            //instance.UnarchiveGlipTeam(chatId);
            
        }
        
    }

}
