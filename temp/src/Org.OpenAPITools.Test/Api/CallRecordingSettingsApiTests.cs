/*
 * RingCentral Connect Platform API
 *
 * RingCentral Connect Platform API
 *
 * The version of the OpenAPI document: 1.0.48
 * Contact: platform@ringcentral.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing CallRecordingSettingsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CallRecordingSettingsApiTests
    {
        private CallRecordingSettingsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CallRecordingSettingsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CallRecordingSettingsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' CallRecordingSettingsApi
            //Assert.IsInstanceOf(typeof(CallRecordingSettingsApi), instance);
        }

        
        /// <summary>
        /// Test DeleteCallRecordingCustomGreeting
        /// </summary>
        [Test]
        public void DeleteCallRecordingCustomGreetingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string greetingId = null;
            //instance.DeleteCallRecordingCustomGreeting(accountId, greetingId);
            
        }
        
        /// <summary>
        /// Test DeleteCallRecordingCustomGreetingList
        /// </summary>
        [Test]
        public void DeleteCallRecordingCustomGreetingListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //instance.DeleteCallRecordingCustomGreetingList(accountId);
            
        }
        
        /// <summary>
        /// Test ListCallRecordingCustomGreetings
        /// </summary>
        [Test]
        public void ListCallRecordingCustomGreetingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string type = null;
            //var response = instance.ListCallRecordingCustomGreetings(accountId, type);
            //Assert.IsInstanceOf(typeof(CallRecordingCustomGreetings), response, "response is CallRecordingCustomGreetings");
        }
        
        /// <summary>
        /// Test ListCallRecordingExtensions
        /// </summary>
        [Test]
        public void ListCallRecordingExtensionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //var response = instance.ListCallRecordingExtensions(accountId);
            //Assert.IsInstanceOf(typeof(CallRecordingExtensions), response, "response is CallRecordingExtensions");
        }
        
        /// <summary>
        /// Test ReadCallRecordingSettings
        /// </summary>
        [Test]
        public void ReadCallRecordingSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //var response = instance.ReadCallRecordingSettings(accountId);
            //Assert.IsInstanceOf(typeof(CallRecordingSettingsResource), response, "response is CallRecordingSettingsResource");
        }
        
        /// <summary>
        /// Test UpdateCallRecordingExtensionList
        /// </summary>
        [Test]
        public void UpdateCallRecordingExtensionListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //BulkAccountCallRecordingsResource bulkAccountCallRecordingsResource = null;
            //instance.UpdateCallRecordingExtensionList(accountId, bulkAccountCallRecordingsResource);
            
        }
        
        /// <summary>
        /// Test UpdateCallRecordingSettings
        /// </summary>
        [Test]
        public void UpdateCallRecordingSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //CallRecordingSettingsResource callRecordingSettingsResource = null;
            //var response = instance.UpdateCallRecordingSettings(accountId, callRecordingSettingsResource);
            //Assert.IsInstanceOf(typeof(CallRecordingSettingsResource), response, "response is CallRecordingSettingsResource");
        }
        
    }

}
