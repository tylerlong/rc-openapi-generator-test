/*
 * RingCentral Connect Platform API
 *
 * RingCentral Connect Platform API
 *
 * The version of the OpenAPI document: 1.0.48
 * Contact: platform@ringcentral.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing CallMonitoringGroupsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CallMonitoringGroupsApiTests
    {
        private CallMonitoringGroupsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CallMonitoringGroupsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CallMonitoringGroupsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' CallMonitoringGroupsApi
            //Assert.IsInstanceOf(typeof(CallMonitoringGroupsApi), instance);
        }

        
        /// <summary>
        /// Test CreateCallMonitoringGroup
        /// </summary>
        [Test]
        public void CreateCallMonitoringGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //CreateCallMonitoringGroupRequest createCallMonitoringGroupRequest = null;
            //var response = instance.CreateCallMonitoringGroup(accountId, createCallMonitoringGroupRequest);
            //Assert.IsInstanceOf(typeof(CallMonitoringGroup), response, "response is CallMonitoringGroup");
        }
        
        /// <summary>
        /// Test DeleteCallMonitoringGroup
        /// </summary>
        [Test]
        public void DeleteCallMonitoringGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string groupId = null;
            //instance.DeleteCallMonitoringGroup(accountId, groupId);
            
        }
        
        /// <summary>
        /// Test ListCallMonitoringGroupMembers
        /// </summary>
        [Test]
        public void ListCallMonitoringGroupMembersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string groupId = null;
            //int? page = null;
            //int? perPage = null;
            //var response = instance.ListCallMonitoringGroupMembers(accountId, groupId, page, perPage);
            //Assert.IsInstanceOf(typeof(CallMonitoringGroupMemberList), response, "response is CallMonitoringGroupMemberList");
        }
        
        /// <summary>
        /// Test ListCallMonitoringGroups
        /// </summary>
        [Test]
        public void ListCallMonitoringGroupsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //int? page = null;
            //int? perPage = null;
            //string memberExtensionId = null;
            //var response = instance.ListCallMonitoringGroups(accountId, page, perPage, memberExtensionId);
            //Assert.IsInstanceOf(typeof(CallMonitoringGroups), response, "response is CallMonitoringGroups");
        }
        
        /// <summary>
        /// Test UpdateCallMonitoringGroup
        /// </summary>
        [Test]
        public void UpdateCallMonitoringGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string groupId = null;
            //CreateCallMonitoringGroupRequest createCallMonitoringGroupRequest = null;
            //var response = instance.UpdateCallMonitoringGroup(accountId, groupId, createCallMonitoringGroupRequest);
            //Assert.IsInstanceOf(typeof(CallMonitoringGroup), response, "response is CallMonitoringGroup");
        }
        
        /// <summary>
        /// Test UpdateCallMonitoringGroupList
        /// </summary>
        [Test]
        public void UpdateCallMonitoringGroupListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string groupId = null;
            //CallMonitoringBulkAssign callMonitoringBulkAssign = null;
            //instance.UpdateCallMonitoringGroupList(accountId, groupId, callMonitoringBulkAssign);
            
        }
        
    }

}
