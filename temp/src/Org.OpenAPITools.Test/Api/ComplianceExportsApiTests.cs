/*
 * RingCentral Connect Platform API
 *
 * RingCentral Connect Platform API
 *
 * The version of the OpenAPI document: 1.0.48
 * Contact: platform@ringcentral.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing ComplianceExportsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ComplianceExportsApiTests
    {
        private ComplianceExportsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ComplianceExportsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ComplianceExportsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' ComplianceExportsApi
            //Assert.IsInstanceOf(typeof(ComplianceExportsApi), instance);
        }

        
        /// <summary>
        /// Test CreateDataExportTask
        /// </summary>
        [Test]
        public void CreateDataExportTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateDataExportTaskRequest createDataExportTaskRequest = null;
            //var response = instance.CreateDataExportTask(createDataExportTaskRequest);
            //Assert.IsInstanceOf(typeof(DataExportTask), response, "response is DataExportTask");
        }
        
        /// <summary>
        /// Test ListDataExportTasks
        /// </summary>
        [Test]
        public void ListDataExportTasksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string status = null;
            //int? page = null;
            //int? perPage = null;
            //var response = instance.ListDataExportTasks(status, page, perPage);
            //Assert.IsInstanceOf(typeof(DataExportTaskList), response, "response is DataExportTaskList");
        }
        
        /// <summary>
        /// Test ReadDataExportTask
        /// </summary>
        [Test]
        public void ReadDataExportTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string taskId = null;
            //var response = instance.ReadDataExportTask(taskId);
            //Assert.IsInstanceOf(typeof(DataExportTask), response, "response is DataExportTask");
        }
        
        /// <summary>
        /// Test ReadDataExportTaskDataset
        /// </summary>
        [Test]
        public void ReadDataExportTaskDatasetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string taskId = null;
            //string datasetId = null;
            //var response = instance.ReadDataExportTaskDataset(taskId, datasetId);
            //Assert.IsInstanceOf(typeof(System.IO.Stream), response, "response is System.IO.Stream");
        }
        
    }

}
