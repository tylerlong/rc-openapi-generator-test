/*
 * RingCentral Connect Platform API
 *
 * RingCentral Connect Platform API
 *
 * The version of the OpenAPI document: 1.0.48
 * Contact: platform@ringcentral.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing CustomFieldsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CustomFieldsApiTests
    {
        private CustomFieldsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CustomFieldsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CustomFieldsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' CustomFieldsApi
            //Assert.IsInstanceOf(typeof(CustomFieldsApi), instance);
        }

        
        /// <summary>
        /// Test CreateCustomField
        /// </summary>
        [Test]
        public void CreateCustomFieldTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //CustomFieldCreateRequest customFieldCreateRequest = null;
            //var response = instance.CreateCustomField(accountId, customFieldCreateRequest);
            //Assert.IsInstanceOf(typeof(CustomFieldResource), response, "response is CustomFieldResource");
        }
        
        /// <summary>
        /// Test DeleteCustomField
        /// </summary>
        [Test]
        public void DeleteCustomFieldTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string fieldId = null;
            //instance.DeleteCustomField(accountId, fieldId);
            
        }
        
        /// <summary>
        /// Test ListCustomFields
        /// </summary>
        [Test]
        public void ListCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //var response = instance.ListCustomFields(accountId);
            //Assert.IsInstanceOf(typeof(CustomFieldsResource), response, "response is CustomFieldsResource");
        }
        
        /// <summary>
        /// Test UpdateCustomField
        /// </summary>
        [Test]
        public void UpdateCustomFieldTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string fieldId = null;
            //CustomFieldUpdateRequest customFieldUpdateRequest = null;
            //var response = instance.UpdateCustomField(accountId, fieldId, customFieldUpdateRequest);
            //Assert.IsInstanceOf(typeof(CustomFieldResource), response, "response is CustomFieldResource");
        }
        
    }

}
