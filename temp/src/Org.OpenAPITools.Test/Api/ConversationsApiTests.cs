/*
 * RingCentral Connect Platform API
 *
 * RingCentral Connect Platform API
 *
 * The version of the OpenAPI document: 1.0.48
 * Contact: platform@ringcentral.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing ConversationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ConversationsApiTests
    {
        private ConversationsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ConversationsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ConversationsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' ConversationsApi
            //Assert.IsInstanceOf(typeof(ConversationsApi), instance);
        }

        
        /// <summary>
        /// Test CreateGlipConversation
        /// </summary>
        [Test]
        public void CreateGlipConversationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateGlipConversationRequest createGlipConversationRequest = null;
            //var response = instance.CreateGlipConversation(createGlipConversationRequest);
            //Assert.IsInstanceOf(typeof(GlipConversationInfo), response, "response is GlipConversationInfo");
        }
        
        /// <summary>
        /// Test ListGlipConversations
        /// </summary>
        [Test]
        public void ListGlipConversationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? recordCount = null;
            //string pageToken = null;
            //var response = instance.ListGlipConversations(recordCount, pageToken);
            //Assert.IsInstanceOf(typeof(GlipConversationsList), response, "response is GlipConversationsList");
        }
        
        /// <summary>
        /// Test ReadGlipConversation
        /// </summary>
        [Test]
        public void ReadGlipConversationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string chatId = null;
            //var response = instance.ReadGlipConversation(chatId);
            //Assert.IsInstanceOf(typeof(GlipConversationInfo), response, "response is GlipConversationInfo");
        }
        
    }

}
