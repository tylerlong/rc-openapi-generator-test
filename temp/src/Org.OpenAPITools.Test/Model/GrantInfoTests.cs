/*
 * RingCentral Connect Platform API
 *
 * RingCentral Connect Platform API
 *
 * The version of the OpenAPI document: 1.0.48
 * Contact: platform@ringcentral.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing GrantInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GrantInfoTests
    {
        // TODO uncomment below to declare an instance variable for GrantInfo
        //private GrantInfo instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of GrantInfo
            //instance = new GrantInfo();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of GrantInfo
        /// </summary>
        [Test]
        public void GrantInfoInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" GrantInfo
            //Assert.IsInstanceOf(typeof(GrantInfo), instance);
        }


        /// <summary>
        /// Test the property 'Uri'
        /// </summary>
        [Test]
        public void UriTest()
        {
            // TODO unit test for the property 'Uri'
        }
        /// <summary>
        /// Test the property 'Extension'
        /// </summary>
        [Test]
        public void ExtensionTest()
        {
            // TODO unit test for the property 'Extension'
        }
        /// <summary>
        /// Test the property 'CallPickup'
        /// </summary>
        [Test]
        public void CallPickupTest()
        {
            // TODO unit test for the property 'CallPickup'
        }
        /// <summary>
        /// Test the property 'CallMonitoring'
        /// </summary>
        [Test]
        public void CallMonitoringTest()
        {
            // TODO unit test for the property 'CallMonitoring'
        }
        /// <summary>
        /// Test the property 'CallOnBehalfOf'
        /// </summary>
        [Test]
        public void CallOnBehalfOfTest()
        {
            // TODO unit test for the property 'CallOnBehalfOf'
        }
        /// <summary>
        /// Test the property 'CallDelegation'
        /// </summary>
        [Test]
        public void CallDelegationTest()
        {
            // TODO unit test for the property 'CallDelegation'
        }
        /// <summary>
        /// Test the property 'GroupPaging'
        /// </summary>
        [Test]
        public void GroupPagingTest()
        {
            // TODO unit test for the property 'GroupPaging'
        }
        /// <summary>
        /// Test the property 'CallQueueSetup'
        /// </summary>
        [Test]
        public void CallQueueSetupTest()
        {
            // TODO unit test for the property 'CallQueueSetup'
        }
        /// <summary>
        /// Test the property 'CallQueueMembersSetup'
        /// </summary>
        [Test]
        public void CallQueueMembersSetupTest()
        {
            // TODO unit test for the property 'CallQueueMembersSetup'
        }
        /// <summary>
        /// Test the property 'CallQueueMessages'
        /// </summary>
        [Test]
        public void CallQueueMessagesTest()
        {
            // TODO unit test for the property 'CallQueueMessages'
        }

    }

}
