/*
 * RingCentral Connect Platform API
 *
 * RingCentral Connect Platform API
 *
 * The version of the OpenAPI document: 1.0.48
 * Contact: platform@ringcentral.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing ScheduleUserMeetingInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ScheduleUserMeetingInfoTests
    {
        // TODO uncomment below to declare an instance variable for ScheduleUserMeetingInfo
        //private ScheduleUserMeetingInfo instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ScheduleUserMeetingInfo
            //instance = new ScheduleUserMeetingInfo();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ScheduleUserMeetingInfo
        /// </summary>
        [Test]
        public void ScheduleUserMeetingInfoInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" ScheduleUserMeetingInfo
            //Assert.IsInstanceOf(typeof(ScheduleUserMeetingInfo), instance);
        }


        /// <summary>
        /// Test the property 'EnforceLogin'
        /// </summary>
        [Test]
        public void EnforceLoginTest()
        {
            // TODO unit test for the property 'EnforceLogin'
        }
        /// <summary>
        /// Test the property 'StartHostVideo'
        /// </summary>
        [Test]
        public void StartHostVideoTest()
        {
            // TODO unit test for the property 'StartHostVideo'
        }
        /// <summary>
        /// Test the property 'StartParticipantsVideo'
        /// </summary>
        [Test]
        public void StartParticipantsVideoTest()
        {
            // TODO unit test for the property 'StartParticipantsVideo'
        }
        /// <summary>
        /// Test the property 'AudioOptions'
        /// </summary>
        [Test]
        public void AudioOptionsTest()
        {
            // TODO unit test for the property 'AudioOptions'
        }
        /// <summary>
        /// Test the property 'AllowJoinBeforeHost'
        /// </summary>
        [Test]
        public void AllowJoinBeforeHostTest()
        {
            // TODO unit test for the property 'AllowJoinBeforeHost'
        }
        /// <summary>
        /// Test the property 'UsePmiForScheduledMeetings'
        /// </summary>
        [Test]
        public void UsePmiForScheduledMeetingsTest()
        {
            // TODO unit test for the property 'UsePmiForScheduledMeetings'
        }
        /// <summary>
        /// Test the property 'UsePmiForInstantMeetings'
        /// </summary>
        [Test]
        public void UsePmiForInstantMeetingsTest()
        {
            // TODO unit test for the property 'UsePmiForInstantMeetings'
        }
        /// <summary>
        /// Test the property 'RequirePasswordForSchedulingNewMeetings'
        /// </summary>
        [Test]
        public void RequirePasswordForSchedulingNewMeetingsTest()
        {
            // TODO unit test for the property 'RequirePasswordForSchedulingNewMeetings'
        }
        /// <summary>
        /// Test the property 'RequirePasswordForScheduledMeetings'
        /// </summary>
        [Test]
        public void RequirePasswordForScheduledMeetingsTest()
        {
            // TODO unit test for the property 'RequirePasswordForScheduledMeetings'
        }
        /// <summary>
        /// Test the property 'DefaultPasswordForScheduledMeetings'
        /// </summary>
        [Test]
        public void DefaultPasswordForScheduledMeetingsTest()
        {
            // TODO unit test for the property 'DefaultPasswordForScheduledMeetings'
        }
        /// <summary>
        /// Test the property 'RequirePasswordForInstantMeetings'
        /// </summary>
        [Test]
        public void RequirePasswordForInstantMeetingsTest()
        {
            // TODO unit test for the property 'RequirePasswordForInstantMeetings'
        }
        /// <summary>
        /// Test the property 'RequirePasswordForPmiMeetings'
        /// </summary>
        [Test]
        public void RequirePasswordForPmiMeetingsTest()
        {
            // TODO unit test for the property 'RequirePasswordForPmiMeetings'
        }
        /// <summary>
        /// Test the property 'PmiPassword'
        /// </summary>
        [Test]
        public void PmiPasswordTest()
        {
            // TODO unit test for the property 'PmiPassword'
        }
        /// <summary>
        /// Test the property 'PstnPasswordProtected'
        /// </summary>
        [Test]
        public void PstnPasswordProtectedTest()
        {
            // TODO unit test for the property 'PstnPasswordProtected'
        }

    }

}
